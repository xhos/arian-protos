syntax = "proto3";

package arian.v1;

import "arian/v1/user.proto";
import "buf/validate/validate.proto";

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc UpdateUserDisplayName(UpdateUserDisplayNameRequest) returns (UpdateUserDisplayNameResponse);
  rpc SetUserDefaultAccount(SetUserDefaultAccountRequest) returns (SetUserDefaultAccountResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc CheckUserExists(CheckUserExistsRequest) returns (CheckUserExistsResponse);
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message GetUserByEmailResponse {
  User user = 1;
}

message CreateUserRequest {
  string id = 1;
  string email = 2;
  optional string display_name = 3;
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  optional string email = 2;
  optional string display_name = 3;
  optional int64 default_account_id = 4;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {}

message UpdateUserDisplayNameRequest {
  string id = 1;
  string display_name = 2;
}

message UpdateUserDisplayNameResponse {
  User user = 1;
}

message SetUserDefaultAccountRequest {
  string id = 1;
  int64 default_account_id = 2;
}

message SetUserDefaultAccountResponse {
  User user = 1;
}

message ListUsersRequest {
  optional int32 limit = 1 [(buf.validate.field).int32 = {
    gte: 1,
    lte: 100
  }];
  optional int32 offset = 2 [(buf.validate.field).int32.gte = 0];
}

message ListUsersResponse {
  repeated User users = 1;
  int64 total_count = 2;
}

message CheckUserExistsRequest {
  string id = 1;
}

message CheckUserExistsResponse {
  bool exists = 1;
}
