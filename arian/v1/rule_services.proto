syntax = "proto3";

package arian.v1;

import "arian/v1/rule.proto";
import "buf/validate/validate.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";

service RuleService {
  rpc ListRules(ListRulesRequest) returns (ListRulesResponse);
  rpc GetRule(GetRuleRequest) returns (GetRuleResponse);
  rpc CreateRule(CreateRuleRequest) returns (CreateRuleResponse);
  rpc UpdateRule(UpdateRuleRequest) returns (UpdateRuleResponse);
  rpc DeleteRule(DeleteRuleRequest) returns (DeleteRuleResponse);
  rpc ValidateRule(ValidateRuleRequest) returns (ValidateRuleResponse);
}

message ListRulesRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
}

message ListRulesResponse {
  repeated Rule rules = 1;
}

message GetRuleRequest {
  string rule_id = 1 [(buf.validate.field).string.uuid = true];
  string user_id = 2 [(buf.validate.field).string.uuid = true];
}

message GetRuleResponse {
  Rule rule = 1;
}

message CreateRuleRequest {
  string user_id = 1 [(buf.validate.field).string.uuid = true];
  string rule_name = 2 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 255
  }];
  int64 category_id = 3 [(buf.validate.field).int64.gt = 0];
  google.protobuf.Struct conditions = 4;
}

message CreateRuleResponse {
  Rule rule = 1;
}

message UpdateRuleRequest {
  string rule_id = 1 [(buf.validate.field).string.uuid = true];
  string user_id = 2 [(buf.validate.field).string.uuid = true];
  google.protobuf.FieldMask update_mask = 3;

  optional string rule_name = 4;
  optional int64 category_id = 5;
  optional google.protobuf.Struct conditions = 6;
  optional bool is_active = 7;
  optional int32 priority_order = 8;
}

message UpdateRuleResponse {
  Rule rule = 1;
}

message DeleteRuleRequest {
  string rule_id = 1 [(buf.validate.field).string.uuid = true];
  string user_id = 2 [(buf.validate.field).string.uuid = true];
}

message DeleteRuleResponse {
  int64 affected_rows = 1;
}

message ValidateRuleRequest {
  google.protobuf.Struct conditions = 1;
}

message ValidationError {
  string field = 1;
  string message = 2;
  string code = 3;
}

message ValidateRuleResponse {
  bool valid = 1;
  repeated ValidationError errors = 2;
  google.protobuf.Struct normalized_conditions = 3;
}